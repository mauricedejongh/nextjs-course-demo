{"ast":null,"code":"import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  console.log(props);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Projects/React course/nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log"],"mappings":"AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED;;KAJQD,a;;AAmDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n\r\n  console.log(props);\r\n\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://maurice:QSM8GOuq0JNawvXR@cluster1.bk5yuje.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, {  _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map(meetup => ({ \r\n      params: { meetupId: meetup._id.toString() } \r\n    }))\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // Fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://maurice:QSM8GOuq0JNawvXR@cluster1.bk5yuje.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}